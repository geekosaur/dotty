#! /usr/bin/perl
use strict;
use warnings;

use Expect;

$| = 1;
print "Trying to connect to underhound.eu...";
my $cao = Expect->new;
$cao->manual_stty(1);
$cao->stty('raw -echo');
$cao->raw_pty(1);
$cao->log_user(0);
$cao->spawn('ssh', '-k', '-x', '-a', '-i', "$ENV{HOME}/.ssh/cao_key", '-p', '23', 'terminal@underhound.eu');
$cao->expect(30, '=> ') or die;
print " done.\n";
print "Authenticating to Crawl server...";
$cao->send('l');
$cao->expect(5, 'username.') or die;
$cao->expect(5, '=> ') or die;
$cao->send("Duph\r");
$cao->expect(5, 'password.') or die;
$cao->expect(5, '=> ') or die;
$cao->send("00LGvLVJkzhW\r");
$cao->expect(5, 'Logged in as:') or die;
print " done.\n";
$cao->log_user(1);
$cao->expect(5, 'Q)uit ') or die 1;
$cao->send('t');
$cao->expect(5, 'selected: Dungeon Crawl Stone Soup Trunk') or die 2;
# @@@ some tty misconfig? never get prompt for some reason
$cao->expect(5, 'q) ') or die 3;
my $stdin = Expect->exp_init(\*STDIN);
$stdin->manual_stty(1);
$stdin->stty('raw', '-echo');
my $stty = `stty -g`;
system qw(stty discard undef dsusp undef werase undef reprint undef susp undef status undef);
# exit interaction if CAO closes connection
$cao->set_seq(' EOF' => sub {undef});
## compensate for CAO getting stty wrong on its side
## @@@ any others I need to escape?
#$stdin->set_seq("\co" => sub {$cao->send("\cv\co"); 1});
# @@@ emergency escape
$stdin->set_seq("\c_" => sub {undef});
# need this too, annoyingly
my $stdout = Expect->exp_init(\*STDOUT);
$stdout->manual_stty(1);
$cao->set_group($stdout);
$cao->log_group(1);
$stdin->set_group($cao);
$stdin->log_group(1);
$cao->log_user(0); # @@@
$stdin->log_user(0); # @@@
$| = 1;
Expect::interconnect($stdin, $cao);
system 'stty', $stty;
$cao->soft_close;
sleep 5;
exit 0;
